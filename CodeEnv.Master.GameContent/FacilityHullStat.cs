// --------------------------------------------------------------------------------------------------------------------
// <copyright>
// Copyright © 2012 - 2015 Strategic Forge
//
// Email: jim@strategicforge.com
// </copyright> 
// <summary> 
// File: FacilityHullStat.cs
// COMMENT - one line to give a brief idea of what the file does.
// </summary> 
// -------------------------------------------------------------------------------------------------------------------- 

#define DEBUG_LOG
#define DEBUG_WARN
#define DEBUG_ERROR

namespace CodeEnv.Master.GameContent {

    using System;
    using System.Collections.Generic;
    using System.Linq;
    using CodeEnv.Master.Common;
    using CodeEnv.Master.Common.LocalResources;
    using CodeEnv.Master.GameContent;
    using UnityEngine;

    /// <summary>
    /// 
    /// </summary>
    public struct FacilityHullStat {

        public FacilityCategory Category { get; private set; }
        public float Mass { get; private set; }
        public float MaxHitPoints { get; private set; }
        public float Science { get; private set; }
        public float Culture { get; private set; }
        public float Income { get; private set; }
        public float Expense { get; private set; }

        /// <summary>
        /// Initializes a new instance of the <see cref="FacilityStat" /> struct.
        /// </summary>
        /// <param name="category">The category.</param>
        /// <param name="mass">The mass.</param>
        /// <param name="maxHitPts">The maximum hit PTS.</param>
        /// <param name="science">The science.</param>
        /// <param name="culture">The culture.</param>
        /// <param name="income">The income generated by this facility.</param>
        /// <param name="expense">The expense consumed by this facility.</param>
        public FacilityHullStat(FacilityCategory category, float mass, float maxHitPts, float science, float culture,
            float income, float expense)
            : this() {
            Category = category;
            Mass = mass;
            MaxHitPoints = maxHitPts;
            Science = science;
            Culture = culture;
            Income = income;
            Expense = expense;
        }

        public override string ToString() {
            return new ObjectAnalyzer().ToString(this);
        }

    }
}

